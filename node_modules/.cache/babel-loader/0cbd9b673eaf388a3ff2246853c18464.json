{"ast":null,"code":"import _classCallCheck from \"C:\\\\Rewardsco\\\\2022\\\\RND\\\\excel-renderer-demo-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Rewardsco\\\\2022\\\\RND\\\\excel-renderer-demo-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Rewardsco\\\\2022\\\\RND\\\\excel-renderer-demo-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Rewardsco\\\\2022\\\\RND\\\\excel-renderer-demo-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Rewardsco\\\\2022\\\\RND\\\\excel-renderer-demo-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Rewardsco\\\\2022\\\\RND\\\\excel-renderer-demo-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Rewardsco\\\\2022\\\\RND\\\\excel-renderer-demo-master\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { OutTable, ExcelRenderer } from 'react-excel-renderer';\nimport { Jumbotron, Col, Input, InputGroup, InputGroupAddon, FormGroup, Label, Button, Fade, FormFeedback, Container, Card } from 'reactstrap';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.renderFile = function (fileObj) {\n      //just pass the fileObj as parameter\n      ExcelRenderer(fileObj, function (err, resp) {\n        if (err) {\n          console.log(err);\n        } else {\n          _this.setState({\n            dataLoaded: true,\n            cols: resp.cols,\n            rows: resp.rows\n          });\n        }\n      });\n    };\n\n    _this.fileHandler = function (event) {\n      if (event.target.files.length) {\n        var fileObj = event.target.files[0];\n        var fileName = fileObj.name; //check for file extension and pass only if it is .xlsx and display error message otherwise\n\n        if (fileName.slice(fileName.lastIndexOf('.') + 1) === \"xlsx\") {\n          _this.setState({\n            uploadedFileName: fileName,\n            isFormInvalid: false\n          });\n\n          _this.renderFile(fileObj);\n        } else {\n          _this.setState({\n            isFormInvalid: true,\n            uploadedFileName: \"\"\n          });\n        }\n      }\n    };\n\n    _this.openFileBrowser = function () {\n      _this.fileInput.current.click();\n    };\n\n    _this.openNewPage = function (chosenItem) {\n      var url = chosenItem === \"github\" ? \"https://github.com/ashishd751/react-excel-renderer\" : \"https://medium.com/@ashishd751/render-and-display-excel-sheets-on-webpage-using-react-js-af785a5db6a7\";\n      window.open(url, '_blank');\n    };\n\n    _this.state = {\n      isOpen: false,\n      dataLoaded: false,\n      isFormInvalid: false,\n      rows: null,\n      cols: null\n    };\n    _this.fileHandler = _this.fileHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.openFileBrowser = _this.openFileBrowser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderFile = _this.renderFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.openNewPage = _this.openNewPage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fileInput = React.createRef();\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        className: \"jumbotron-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"react-excel-renderer\"), React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Welcome to the demo of react-excel-renderer.\"), React.createElement(Button, {\n        className: \"primary jumbotron-button\",\n        onClick: this.openNewPage.bind(this, \"github\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"GitHub\"), ' ', React.createElement(Button, {\n        className: \"primary jumbotron-button\",\n        onClick: this.openNewPage.bind(this, \"medium\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Medium\"), React.createElement(\"hr\", {\n        className: \"my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Developed with \", React.createElement(\"span\", {\n        className: \"fa fa-heart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), \" by Ashish Deshpande\"))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleFile\",\n        xs: 6,\n        sm: 4,\n        lg: 2,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Upload\"), React.createElement(Col, {\n        xs: 4,\n        sm: 8,\n        lg: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"info\",\n        style: {\n          color: \"white\",\n          zIndex: 0\n        },\n        onClick: this.openFileBrowser.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"cui-file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), \" Browse\\u2026\"), React.createElement(\"input\", {\n        type: \"file\",\n        hidden: true,\n        onChange: this.fileHandler.bind(this),\n        ref: this.fileInput,\n        onClick: function onClick(event) {\n          event.target.value = null;\n        },\n        style: {\n          \"padding\": \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(Input, {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.uploadedFileName,\n        readOnly: true,\n        invalid: this.state.isFormInvalid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Fade, {\n        in: this.state.isFormInvalid,\n        tag: \"h6\",\n        style: {\n          fontStyle: \"italic\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Please select a .xlsx file only !\")))))), this.state.dataLoaded && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Card, {\n        body: true,\n        outline: true,\n        color: \"secondary\",\n        className: \"restrict-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(OutTable, {\n        data: this.state.rows,\n        columns: this.state.cols,\n        tableClassName: \"ExcelTable2007\",\n        tableHeaderRowClass: \"heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Rewardsco\\2022\\RND\\excel-renderer-demo-master\\src\\App.js"],"names":["React","Component","OutTable","ExcelRenderer","Jumbotron","Col","Input","InputGroup","InputGroupAddon","FormGroup","Label","Button","Fade","FormFeedback","Container","Card","App","props","renderFile","fileObj","err","resp","console","log","setState","dataLoaded","cols","rows","fileHandler","event","target","files","length","fileName","name","slice","lastIndexOf","uploadedFileName","isFormInvalid","openFileBrowser","fileInput","current","click","openNewPage","chosenItem","url","window","open","state","isOpen","bind","toggle","createRef","color","zIndex","value","fontStyle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {OutTable, ExcelRenderer} from 'react-excel-renderer';\nimport { Jumbotron, Col, Input, InputGroup, InputGroupAddon, FormGroup, Label, Button, Fade, FormFeedback, Container, Card } from 'reactstrap';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      isOpen: false,\n      dataLoaded: false,\n      isFormInvalid: false,\n      rows: null,\n      cols: null\n    }\n    this.fileHandler = this.fileHandler.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.openFileBrowser = this.openFileBrowser.bind(this);\n    this.renderFile = this.renderFile.bind(this);\n    this.openNewPage = this.openNewPage.bind(this);\n    this.fileInput = React.createRef();\n  }\n\n  renderFile = (fileObj) => {\n      //just pass the fileObj as parameter\n      ExcelRenderer(fileObj, (err, resp) => {\n        if(err){\n          console.log(err);            \n        }\n        else{\n          this.setState({\n            dataLoaded: true,\n            cols: resp.cols,\n            rows: resp.rows\n          });\n        }\n      }); \n  }\n\n  fileHandler = (event) => {    \n    if(event.target.files.length){\n      let fileObj = event.target.files[0];\n      let fileName = fileObj.name;\n\n      \n      //check for file extension and pass only if it is .xlsx and display error message otherwise\n      if(fileName.slice(fileName.lastIndexOf('.')+1) === \"xlsx\"){\n        this.setState({\n          uploadedFileName: fileName,\n          isFormInvalid: false\n        });\n        this.renderFile(fileObj)\n      }    \n      else{\n        this.setState({\n          isFormInvalid: true,\n          uploadedFileName: \"\"\n        })\n      }\n    }               \n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  openFileBrowser = () => {\n    this.fileInput.current.click();\n  }\n\n  openNewPage = (chosenItem) => {\n    const url = chosenItem === \"github\" ? \"https://github.com/ashishd751/react-excel-renderer\" : \"https://medium.com/@ashishd751/render-and-display-excel-sheets-on-webpage-using-react-js-af785a5db6a7\";\n    window.open(url, '_blank');\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Jumbotron className=\"jumbotron-background\">          \n              <h1 className=\"display-3\">react-excel-renderer</h1>\n              <p className=\"lead\">Welcome to the demo of react-excel-renderer.</p>  \n              <Button className=\"primary jumbotron-button\" onClick={this.openNewPage.bind(this,\"github\")}>GitHub</Button>{' '}\n              <Button className=\"primary jumbotron-button\" onClick={this.openNewPage.bind(this,\"medium\")}>Medium</Button>                      \n              <hr className=\"my-2\" />\n              <p>Developed with <span className=\"fa fa-heart\"></span> by Ashish Deshpande</p>\n          </Jumbotron>\n        </div>\n        <Container>\n        <form>\n          <FormGroup row>\n            <Label for=\"exampleFile\" xs={6} sm={4} lg={2} size=\"lg\">Upload</Label>          \n            <Col xs={4} sm={8} lg={10}>                                                     \n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  <Button color=\"info\" style={{color: \"white\", zIndex: 0}} onClick={this.openFileBrowser.bind(this)}><i className=\"cui-file\"></i> Browse&hellip;</Button>\n                  <input type=\"file\" hidden onChange={this.fileHandler.bind(this)} ref={this.fileInput} onClick={(event)=> { event.target.value = null }} style={{\"padding\":\"10px\"}} />                                \n                </InputGroupAddon>\n                <Input type=\"text\" className=\"form-control\" value={this.state.uploadedFileName} readOnly invalid={this.state.isFormInvalid} />                                              \n                <FormFeedback>    \n                  <Fade in={this.state.isFormInvalid} tag=\"h6\" style={{fontStyle: \"italic\"}}>\n                    Please select a .xlsx file only !\n                  </Fade>                                                                \n                </FormFeedback>\n              </InputGroup>     \n            </Col>                                                   \n          </FormGroup>   \n        </form>\n\n        {this.state.dataLoaded && \n        <div>\n          <Card body outline color=\"secondary\" className=\"restrict-card\">\n            \n              <OutTable data={this.state.rows} columns={this.state.cols} tableClassName=\"ExcelTable2007\" tableHeaderRowClass=\"heading\" />\n            \n          </Card>  \n        </div>}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}